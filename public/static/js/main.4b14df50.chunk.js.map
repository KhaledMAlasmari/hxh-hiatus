{"version":3,"sources":["services/api.ts","hooks/useStatusAPI.ts","static/backgrounds/back/backBackground.svg","reducers/statusReducer.ts","helpers/renderApp.tsx","components/Home/Back/BackHome.tsx","static/backgrounds/hiatus/logo.png","components/HeaderItem/HeaderItem.tsx","components/Header/Hiatus/hiatusHeader.tsx","components/Body/Hiatus/Hiatus.tsx","components/Home/Hiatus/HiatusHome.tsx","components/Home/index.tsx","App.tsx","index.tsx"],"names":["getSeriesStatus","a","axios","get","response","data","useStatusAPI","setStatus","setIsLoading","useEffect","fetchStatus","statusReducer","state","renderApp","ReactDOM","render","StrictMode","document","getElementById","homeStyle","backgroundImage","backBackground","height","backgroundSize","Home","createStore","subscribe","style","HeaderItem","text","backgroundColor","fontColor","fontSize","id","HiatusHeader","src","logo","HiatusBody","status","styles","slideInLeft","animation","animationName","Radium","keyframes","fadeIn","StyleRoot","className","issue","Hiatus","useState","isLoading","onHiatus","HiatusHome","console","log","BackHome","App","path","exact","component"],"mappings":"uUAGMA,EAAe,uCAAG,4BAAAC,EAAA,sEACCC,IAAMC,IAA2B,YADlC,cACjBC,EADiB,OAC+CC,KAD/C,kBAEhBD,GAFgB,2CAAH,qDCWNE,MAXf,SAAsBC,EAAoFC,GACzGC,qBAAU,WAAM,4CACf,sBAAAR,EAAA,6DACCO,GAAa,GADd,KAECD,EAFD,SAEiBP,IAFjB,kCAGCQ,GAAa,GAHd,4CADe,uBAAC,WAAD,wBAMfE,KACE,CAACH,EAAWC,KCXD,MAA0B,2C,QCW1BG,EATO,WAAiD,IAAhDC,EAA+C,uDAAvB,GAC9C,OAAOA,G,OCKOC,EAJG,WAChBC,IAASC,OAAO,eAAC,IAAMC,WAAP,eAAmB,cAAC,EAAD,IAAnB,OAA+CC,SAASC,eAAe,UCWnFC,EAA4B,CACjCC,gBAAgB,OAAD,OAASC,EAAT,KACfC,OAAQ,OACRC,eAAgB,SAIFC,EAlBF,WAKZ,OAJcC,YAAYd,GACpBe,WAAU,WACfb,OAGA,qBAAKc,MAAOR,KCXC,MAA0B,iCCkB1BS,G,OAhBI,SAAC,GAA0D,IAAxDC,EAAuD,EAAvDA,KAAuD,EAAjDC,gBAAiD,EAAhCC,UAAgC,EAArBC,SACvD,OACC,qBAAKC,GAAG,aAAR,SACEJ,MCcWK,G,OAdM,WACpB,OACC,sBAAKD,GAAG,eAAR,UACC,qBAAKA,GAAG,OAAOE,IAAKC,IACpB,sBAAKH,GAAG,cAAR,UACC,cAAC,EAAD,CAAYJ,KAAK,eAAeC,gBAAgB,QAAQC,UAAU,UAAUC,SAAS,UACrF,cAAC,EAAD,CAAYH,KAAK,kBAAkBC,gBAAgB,QAAQC,UAAU,UAAUC,SAAS,UACxF,cAAC,EAAD,CAAYH,KAAK,QAAQC,gBAAgB,QAAQC,UAAU,UAAUC,SAAS,kB,gCCgCnEK,EAvCI,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,OAEfC,EAAc,CACnBC,YAAa,CACZC,UAAW,OACXC,cAAeC,IAAOC,UAAUJ,cAAa,gBAE9CK,OAAQ,CACPJ,UAAW,OACXC,cAAeC,IAAOC,UAAUC,SAAQ,YAK1C,OACC,qBAAKZ,GAAG,aAAR,SACC,gCACC,cAAC,IAAOa,UAAR,CAAkBnB,MAAOY,EAAOM,OAAhC,SACC,oBAAGE,UAAU,cAAb,kCAAgD,uBAAhD,yBACwBT,EAAOU,WAEhC,cAAC,IAAOF,UAAR,CAAkBnB,MAAOY,EAAOC,YAAhC,SACC,oBAAIP,GAAG,WAER,cAAC,IAAOa,UAAR,CAAkBnB,MAAOY,EAAOM,OAAhC,SACC,oBAAGE,UAAU,cAAb,gDAA8D,uBAA9D,yCCVUvB,EAfF,SAAC,GAAqB,IAApBc,EAAmB,EAAnBA,OACd,OACC,sBAAKL,GAAG,aAAR,UACC,cAAC,EAAD,IACA,cAACgB,EAAD,CAAYX,OAAQA,QCqBRd,EAvBQ,WAAO,IAAD,EACA0B,qBADA,mBACrBZ,EADqB,KACb/B,EADa,OAEM2C,oBAAS,GAFf,mBAErBC,EAFqB,KAEV3C,EAFU,KAK5B,OAFAF,EAAaC,EAAWC,GAEpB2C,EACI,0CAGJ,OAACb,QAAD,IAACA,OAAD,EAACA,EAAQc,UAOL,mCACN,cAACC,EAAD,CAAYf,OAAQA,OAPrBgB,QAAQC,IAAR,OAAYjB,QAAZ,IAAYA,OAAZ,EAAYA,EAAQc,UAEnB,cAACI,EAAD,MCHYC,MAVf,WACC,OACC,cAAC,IAAD,UACC,qBAAKV,UAAU,MAAf,SACC,cAAC,IAAD,CAAOW,KAAK,IAAIC,OAAK,EAACC,UAAWpC,SCLrCV,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.4b14df50.chunk.js","sourcesContent":["import axios from \"axios\"\r\nimport seriesStatusInterface from \"../helpers/interfaces/seriesStatusInterface\"\r\n\r\nconst getSeriesStatus = async (): Promise<seriesStatusInterface> => {\r\n\tconst response = (await axios.get<seriesStatusInterface>('/status/')).data\r\n\treturn response\r\n}\r\n\r\n\r\nexport {\r\n\tgetSeriesStatus\r\n}","import { useEffect } from \"react\";\r\nimport seriesStatusInterface from \"../helpers/interfaces/seriesStatusInterface\";\r\nimport { getSeriesStatus } from \"../services/api\";\r\nfunction useStatusAPI(setStatus: React.Dispatch<React.SetStateAction<seriesStatusInterface | undefined>>, setIsLoading: React.Dispatch<React.SetStateAction<boolean>>){\r\n\tuseEffect(() => {\r\n\t\tasync function fetchStatus(){\r\n\t\t\tsetIsLoading(true)\r\n\t\t\tsetStatus(await getSeriesStatus())\r\n\t\t\tsetIsLoading(false)\r\n\t\t}\r\n\t\tfetchStatus()\r\n\t}, [setStatus, setIsLoading])\r\n}\r\n\r\nexport default useStatusAPI","export default __webpack_public_path__ + \"static/media/backBackground.b68d4c3b.svg\";","import { Action } from \"redux\"\r\n\r\nconst statusReducer = (state: stateInterface = {}, action: Action) => {\r\n\treturn state\r\n}\r\n\r\n\r\ninterface stateInterface {\r\n\tissue?: string,\r\n\tonHiatus?: boolean\r\n}\r\nexport default statusReducer","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"../App\";\r\n\r\nconst renderApp = () => {\r\n  ReactDOM.render(<React.StrictMode> <App /> </React.StrictMode>,document.getElementById('root'));\r\n};\r\n\r\nexport default renderApp;\r\n","import CSS from 'csstype'\r\nimport backBackground from '../../../static/backgrounds/back/backBackground.svg'\r\nimport {createStore} from 'redux'\r\nimport statusReducer from '../../../reducers/statusReducer'\r\nimport renderApp from '../../../helpers/renderApp'\r\nconst Home = () => {\r\n\tconst store = createStore(statusReducer)\r\n\tstore.subscribe(() => {\r\n\t\trenderApp()\r\n\t})\r\n\treturn(\r\n\t\t<div style={homeStyle}>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst homeStyle: CSS.Properties = {\r\n\tbackgroundImage: `url(${backBackground})`,\r\n\theight: '100%',\r\n\tbackgroundSize: 'cover',\r\n}\r\n\r\n\r\nexport default Home","export default __webpack_public_path__ + \"static/media/logo.6295f10b.png\";","import CSS from 'csstype'\r\nimport './style.css'\r\nconst HeaderItem = ({ text, backgroundColor, fontColor, fontSize}: Props) => {\r\n\treturn (\r\n\t\t<div id=\"HeaderItem\">\r\n\t\t\t{text}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\ninterface Props {\r\n\ttext: string,\r\n\tbackgroundColor: string,\r\n\tfontColor: string,\r\n\tfontSize: string,\r\n}\r\n\r\nexport default HeaderItem","import logo from '../../../static/backgrounds/hiatus/logo.png'\r\nimport CSS from 'csstype'\r\nimport HeaderItem from '../../HeaderItem/HeaderItem'\r\nimport './hiatusHeaderStyle.css'\r\n\r\nconst HiatusHeader = () => {\r\n\treturn (\r\n\t\t<div id=\"hiatusHeader\">\r\n\t\t\t<img id=\"logo\" src={logo}></img>\r\n\t\t\t<div id=\"hiatusItems\">\r\n\t\t\t\t<HeaderItem text=\"Hiatus Table\" backgroundColor=\"white\" fontColor=\"#596b5d\" fontSize=\"0.5em\"/>\r\n\t\t\t\t<HeaderItem text=\"Author Comments\" backgroundColor=\"white\" fontColor=\"#596b5d\" fontSize=\"0.5em\"/>\r\n\t\t\t\t<HeaderItem text=\"About\" backgroundColor=\"white\" fontColor=\"#596b5d\" fontSize=\"0.5em\"/>\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default HiatusHeader","import seriesStatusInterface from \"../../../helpers/interfaces/seriesStatusInterface\"\r\nimport './style.css'\r\nimport gon from '../../../static/backgrounds/hiatus/gon.png'\r\nimport { slideInLeft, fadeIn } from 'react-animations'\r\nimport Radium from 'radium';\r\nconst HiatusBody = ({ status }: Props) => {\r\n\r\n\tconst styles: any = {\r\n\t\tslideInLeft: {\r\n\t\t\tanimation: 'x 1s',\r\n\t\t\tanimationName: Radium.keyframes(slideInLeft, 'slideInLeft')\r\n\t\t},\r\n\t\tfadeIn: {\r\n\t\t\tanimation: 'x 3s',\r\n\t\t\tanimationName: Radium.keyframes(fadeIn, 'fadeIn')\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div id=\"hiatusBody\">\r\n\t\t\t<div>\r\n\t\t\t\t<Radium.StyleRoot style={styles.fadeIn}>\r\n\t\t\t\t\t<p className=\"hiatus-text\">THE GREAT HIATUS ARC <br />\r\n\t\t\t\t\t\tCONTINUES AS OF ISSUE {status.issue}</p>\r\n\t\t\t\t</Radium.StyleRoot>\r\n\t\t\t\t<Radium.StyleRoot style={styles.slideInLeft}>\r\n\t\t\t\t\t<hr id=\"line\" />\r\n\t\t\t\t</Radium.StyleRoot>\r\n\t\t\t\t<Radium.StyleRoot style={styles.fadeIn}>\r\n\t\t\t\t\t<p className=\"hiatus-text\">While you are at it, check out more<br />cool stuff about the manga!</p>\r\n\t\t\t\t</Radium.StyleRoot>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n\t//\t\t\t\t<img src={gon}></img>\r\n\r\n}\r\n\r\ninterface Props {\r\n\tstatus: seriesStatusInterface\r\n}\r\n\r\n\r\nexport default HiatusBody","import HiatusHeader from '../../Header/Hiatus/hiatusHeader'\r\nimport './style.css'\r\nimport HiatusBody from '../../Body/Hiatus/Hiatus'\r\nimport seriesStatusInterface from '../../../helpers/interfaces/seriesStatusInterface'\r\nimport CSS from 'csstype'\r\nconst Home = ({status}: Props) => {\r\n\treturn (\r\n\t\t<div id=\"hiatusHome\">\r\n\t\t\t<HiatusHeader />\r\n\t\t\t<HiatusBody status={status} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\ninterface Props {\r\n\tstatus: seriesStatusInterface\r\n}\r\n\t\r\n\r\n\r\nexport default Home","import { useEffect, useState } from \"react\"\r\nimport seriesStatusInterface from \"../../helpers/interfaces/seriesStatusInterface\"\r\nimport useStatusAPI from \"../../hooks/useStatusAPI\"\r\nimport { getSeriesStatus } from \"../../services/api\"\r\nimport BackHome from \"./Back/BackHome\"\r\nimport HiatusHome from \"./Hiatus/HiatusHome\"\r\n\r\nconst Home: React.FC = () => {\r\n\tconst [status, setStatus] = useState<seriesStatusInterface>()\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\tuseStatusAPI(setStatus, setIsLoading)\r\n\r\n\tif (isLoading) {\r\n\t\treturn <h1>loading</h1>\r\n\t}\r\n\r\n\tif (!status?.onHiatus) {\r\n\t\tconsole.log(status?.onHiatus);\r\n\t\treturn (\r\n\t\t\t<BackHome />\r\n\t\t)\r\n\t}\r\n\telse\r\n\t\treturn <>\r\n\t\t\t<HiatusHome status={status} />\r\n\t\t</>\r\n\r\n\r\n}\r\n\r\nexport default Home","import React from 'react';\nimport logo from './logo.svg';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './App.css';\nimport Home from './components/Home/index';\n\nfunction App() {\n\treturn (\n\t\t<Router>\n\t\t\t<div className=\"App\">\n\t\t\t\t<Route path='/' exact component={Home} />\n\t\t\t</div>\n\t\t</Router>\n\t)\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}